{
  "abstract" : [
    {
      "text" : "介绍我是如何使用 GitHub Workflow 和 Swift DocC Plugin 把代码中的注释编译成这个网站的。",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/LeetCode\/documentation\/LeetCode"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/LeetCode\/documentation\/LeetCode\/Automatically-Build-Website"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "LeetCode"
      }
    ],
    "role" : "collectionGroup",
    "title" : "使用 GitHub Workflow 自动构建和部署文档网站"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "identifier" : "https:\/\/github.com\/apple\/swift-docc-plugin",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " 是一个",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Swift Package Manager 命令插件，用于直接构建 DocC 文档归档，并可用于静态网页托管服务。",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "其使用文档位于",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/apple.github.io\/swift-docc-plugin\/documentation\/swiftdoccplugin\/",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : "。",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "本仓库在 GitHub Workflow 中调用 Swift DocC Plugin 生成文档网站并部署到 GitHub Pages。",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "网站构建脚本",
          "level" : 2,
          "text" : "网站构建脚本",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "首先在 Swift Package 清单文件中添加 Swift DocC Plugin 的依赖：",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let package = Package(",
            "    \/\/ name, platforms, products, etc.",
            "    dependencies: [",
            "        \/\/ other dependencies",
            "        .package(url: \"https:\/\/github.com\/apple\/swift-docc-plugin\", from: \"1.0.0\"),",
            "    ],",
            "    targets: [",
            "        \/\/ targets",
            "    ]",
            ")"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "然后参照文章 ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/apple.github.io\/swift-docc-plugin\/documentation\/swiftdoccplugin\/publishing-to-github-pages",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : "",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "和脚本文件",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/github.com\/apple\/swift-docc-plugin\/blob\/main\/bin\/update-gh-pages-documentation-site",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "，编写适用此仓库的构建脚本。",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "GitHub Pages 支持自动将 ",
              "type" : "text"
            },
            {
              "code" : "gh-pages",
              "type" : "codeVoice"
            },
            {
              "text" : " 分支下的内容发布出来，也支持自定义其他分支。可以发布分支根目录，",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "也可以发布分支下的 ",
              "type" : "text"
            },
            {
              "code" : "docs",
              "type" : "codeVoice"
            },
            {
              "text" : " 目录。为了便于脚本编写，我使用 ",
              "type" : "text"
            },
            {
              "code" : "gh-pages",
              "type" : "codeVoice"
            },
            {
              "text" : " 分支下的 ",
              "type" : "text"
            },
            {
              "code" : "docs",
              "type" : "codeVoice"
            },
            {
              "text" : " 目录。",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "这里使用 ",
              "type" : "text"
            },
            {
              "code" : "git worktree",
              "type" : "codeVoice"
            },
            {
              "text" : " 将 ",
              "type" : "text"
            },
            {
              "code" : "gh-pages",
              "type" : "codeVoice"
            },
            {
              "text" : " 分支签出到一个子目录，便于处理。",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "git worktree add --checkout gh-pages origin\/gh-pages"
          ],
          "syntax" : "bash",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "然后编译文档网站：",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "# Pretty print DocC JSON output so that it can be consistently diffed between commits",
            "export DOCC_JSON_PRETTYPRINT=\"YES\"",
            "",
            "# Generate documentation and output it",
            "# to the \/docs subdirectory in the gh-pages worktree directory.",
            "export SWIFTPM_ENABLE_COMMAND_PLUGINS=1",
            "swift package \\",
            "    --allow-writing-to-directory \"gh-pages\/docs\" \\",
            "    generate-documentation \\",
            "    --disable-indexing \\",
            "    --transform-for-static-hosting \\",
            "    --hosting-base-path \"\/LeetCode\" \\",
            "    --output-path \"gh-pages\/docs\""
          ],
          "syntax" : "bash",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "DocC 编译的文档网站首页是一个 404 页面，对于网站访问者来说非常不友好。",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "这里我使用一个包含跳转指令的 HTML 页面替换 DocC 生成的首页：",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "<html>",
            "    <head>",
            "        <meta http-equiv=\"refresh\" content=\"0; url=documentation\/leetcode\/\" \/>",
            "    <\/head>",
            "    <body>",
            "        <p><a href=\"documentation\/leetcode\/\">Redirect<\/a><\/p>",
            "    <\/body>",
            "<\/html>",
            ""
          ],
          "syntax" : "html",
          "type" : "codeListing"
        },
        {
          "code" : [
            "cp BuildTools\/custom-index.html gh-pages\/docs\/index.html"
          ],
          "syntax" : "bash",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "接下来，在网站根目录添加一个 ",
              "type" : "text"
            },
            {
              "code" : ".nojekyll",
              "type" : "codeVoice"
            },
            {
              "text" : " 文件防止 GitHub 尝试使用 Jekyll 编译 DocC 生成的网站：",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "touch gh-pages\/docs\/.nojekyll"
          ],
          "syntax" : "bash",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "最后，将生成的内容提交到 ",
              "type" : "text"
            },
            {
              "code" : "gh-pages",
              "type" : "codeVoice"
            },
            {
              "text" : " 分支并清理 Git 工作树：",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "# Save the current commit we've just built documentation from in a variable",
            "CURRENT_COMMIT_HASH=`git rev-parse --short HEAD`",
            "",
            "# Commit and push our changes to the gh-pages branch",
            "cd gh-pages",
            "git add docs",
            "",
            "if [ -n \"$(git status --porcelain)\" ]; then",
            "    echo \"Documentation changes found. Commiting the changes to the 'gh-pages' branch and pushing to origin.\"",
            "    git commit -m \"Update GitHub Pages documentation site to '$CURRENT_COMMIT_HASH'.\"",
            "    git push origin HEAD:gh-pages",
            "else",
            "  # No changes found, nothing to commit.",
            "  echo \"No documentation changes found.\"",
            "fi",
            "",
            "# Delete the git worktree we created",
            "cd ..",
            "git worktree remove gh-pages"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "完整的构建脚本位于仓库的 ",
              "type" : "text"
            },
            {
              "code" : "BuildTools\/build-doc.sh",
              "type" : "codeVoice"
            },
            {
              "text" : "。",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "配置-GitHub-自动部署",
          "level" : 2,
          "text" : "配置 GitHub 自动部署",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "要启用 GitHub 自动部署，在仓库根目录创建一个 ",
              "type" : "text"
            },
            {
              "code" : ".github\/workflows",
              "type" : "codeVoice"
            },
            {
              "text" : " 目录。每一个工作流是一个",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "YAML 文件，可以随意命名。",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "name: Swift",
            "",
            "on:",
            "  push:",
            "    branches: [ main ]",
            "  pull_request:",
            "    branches: [ main ]",
            "",
            "jobs:",
            "  build-documentation:",
            "    name: 构建文档网站",
            "    runs-on: macos-latest",
            "    steps:",
            "    - uses: actions\/checkout@v3",
            "    - uses: fwal\/setup-swift@v1",
            "    - name: Build",
            "      run: .\/BuildTools\/build-doc.sh"
          ],
          "syntax" : "yaml",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "这里指定 “main” 分支的推送和合并请求事件，定义了一个 job，在 job 中使用了",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "actions\/checkout@v3",
              "type" : "codeVoice"
            },
            {
              "text" : " 和 ",
              "type" : "text"
            },
            {
              "code" : "fwal\/setup-swift@v1",
              "type" : "codeVoice"
            },
            {
              "text" : " 两个 Action，最后使用构建脚本执行构建操作。",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "GitHub Runner 不会自动拉取仓库，也不会自动准备 swift 环境，因此需要使用上述两个 Action。他们的仓库地址为",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/github.com\/actions\/checkout",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "和",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "https:\/\/github.com\/fwal\/setup-swift",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : "。",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "在 GitHub 仓库中配置 Pages 数据源后，当指定分支更新就会自动更新 GitHub Pages。因此，每当推动 main",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "分支后就会首先执行我们指定的 Workflow，随后由构建脚本中的 ",
              "type" : "text"
            },
            {
              "code" : "git push origin HEAD:gh-pages",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "指令除法 GitHub Pages 更新。",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "修订历史",
          "level" : 2,
          "text" : "修订历史",
          "type" : "heading"
        },
        {
          "header" : "row",
          "rows" : [
            [
              [
                {
                  "inlineContent" : [
                    {
                      "text" : "时间",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "text" : "修订",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            ],
            [
              [
                {
                  "inlineContent" : [
                    {
                      "code" : "2022-04-26T15:07:57+08:00",
                      "type" : "codeVoice"
                    }
                  ],
                  "type" : "paragraph"
                }
              ],
              [
                {
                  "inlineContent" : [
                    {
                      "text" : "创建。",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            ]
          ],
          "type" : "table"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/LeetCode\/documentation\/LeetCode\/Usage"
      ],
      "title" : "关于本仓库"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/LeetCode\/documentation\/LeetCode\/Manually-Build-Website"
      ],
      "title" : "历史版本"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/leetcode\/automatically-build-website"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://LeetCode/documentation/LeetCode": {
  "abstract" : [
    {
      "text" : "我的 LeetCode 题目解法和笔记。",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/LeetCode\/documentation\/LeetCode",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "LeetCode",
  "type" : "topic",
  "url" : "\/documentation\/leetcode"
},
"doc://LeetCode/documentation/LeetCode/Manually-Build-Website": {
  "abstract" : [
    {
      "text" : "介绍我是如何使用 Swift DocC 把代码中的注释编译成这个网站的。",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/LeetCode\/documentation\/LeetCode\/Manually-Build-Website",
  "kind" : "article",
  "role" : "article",
  "title" : "手动导出并转换文档网站",
  "type" : "topic",
  "url" : "\/documentation\/leetcode\/manually-build-website"
},
"doc://LeetCode/documentation/LeetCode/Usage": {
  "abstract" : [
    {
      "text" : "创建题目、测试题解。",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/LeetCode\/documentation\/LeetCode\/Usage",
  "kind" : "article",
  "role" : "article",
  "title" : "使用说明",
  "type" : "topic",
  "url" : "\/documentation\/leetcode\/usage"
},
"https://apple.github.io/swift-docc-plugin/documentation/swiftdoccplugin/": {
  "identifier" : "https:\/\/apple.github.io\/swift-docc-plugin\/documentation\/swiftdoccplugin\/",
  "title" : "https:\/\/apple.github.io\/swift-docc-plugin\/documentation\/swiftdoccplugin\/",
  "titleInlineContent" : [
    {
      "text" : "https:\/\/apple.github.io\/swift-docc-plugin\/documentation\/swiftdoccplugin\/",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/apple.github.io\/swift-docc-plugin\/documentation\/swiftdoccplugin\/"
},
"https://apple.github.io/swift-docc-plugin/documentation/swiftdoccplugin/publishing-to-github-pages": {
  "identifier" : "https:\/\/apple.github.io\/swift-docc-plugin\/documentation\/swiftdoccplugin\/publishing-to-github-pages",
  "title" : "Publishing to GitHub Pages",
  "titleInlineContent" : [
    {
      "text" : "Publishing to GitHub Pages",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/apple.github.io\/swift-docc-plugin\/documentation\/swiftdoccplugin\/publishing-to-github-pages"
},
"https://github.com/actions/checkout": {
  "identifier" : "https:\/\/github.com\/actions\/checkout",
  "title" : "https:\/\/github.com\/actions\/checkout",
  "titleInlineContent" : [
    {
      "text" : "https:\/\/github.com\/actions\/checkout",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/actions\/checkout"
},
"https://github.com/apple/swift-docc-plugin": {
  "identifier" : "https:\/\/github.com\/apple\/swift-docc-plugin",
  "title" : "Swift DocC Plugin",
  "titleInlineContent" : [
    {
      "text" : "Swift DocC Plugin",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/apple\/swift-docc-plugin"
},
"https://github.com/apple/swift-docc-plugin/blob/main/bin/update-gh-pages-documentation-site": {
  "identifier" : "https:\/\/github.com\/apple\/swift-docc-plugin\/blob\/main\/bin\/update-gh-pages-documentation-site",
  "title" : "https:\/\/github.com\/apple\/swift-docc-plugin\/blob\/main\/bin\/update-gh-pages-documentation-site",
  "titleInlineContent" : [
    {
      "text" : "https:\/\/github.com\/apple\/swift-docc-plugin\/blob\/main\/bin\/update-gh-pages-documentation-site",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/apple\/swift-docc-plugin\/blob\/main\/bin\/update-gh-pages-documentation-site"
},
"https://github.com/fwal/setup-swift": {
  "identifier" : "https:\/\/github.com\/fwal\/setup-swift",
  "title" : "https:\/\/github.com\/fwal\/setup-swift",
  "titleInlineContent" : [
    {
      "text" : "https:\/\/github.com\/fwal\/setup-swift",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/github.com\/fwal\/setup-swift"
}
}
}